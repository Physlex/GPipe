#ifndef PIPE_H
#define PIPE_H

/**
* Includes for use in PIPE framework
*/
///////////////////
#include "Init.h"
#include "Buffer.h"
///////////////////
#include <Angel.h> //Extended from Angel
///////////////////

#define MAXPOINTS 4

class Pipe {
 public:
   /**
   *  Pass instantiated buffer object
   */
   Pipe(Buffer *_genBuffer, GLint _thetaLoc);

   /**
   *  Creates a vertex object for use in CreateBuffer and InitShader
   *  @details Programmer builds algorithim here.
   *  Meant to be more expandable then the main file.
   */
   void DrawScheme();

   /**
   *  Returns programID
   */
   GLuint GetProgramID();

 private:
   /**
   *  Creates buffer relevant to current scheme
   */
   void CreateBuffer(GLuint numObjects, GLsizeiptr size, const void *data);
   void CreateBuffer(GLuint numObjects, GLsizeiptr sizep, GLsizeiptr sizeColours,  const void *vertexData, const void *colourData);

   /**
   *  Initializes shader and attrib data
   */
   void InitializeShaders(GLsizeiptr sizePoints);

   /**
   *  Defines vertex attributes in shader
   *  @param progID, generated by glUseProgram
   *  @param inName, filename where vshader is defined
   */
   void DefineAttribute(const char *inName);
   void DefineAttribute(const char *inName, GLsizeiptr sizePoints);

   /**
   *  DefineUniform vars in shader
   *  @param progID, generated by glUseProgram
   *  @param inName, filename where fshader is defined
   */
   void DefineUniform(const char *inName);

   Buffer *genBuffer;
   GLuint progID; GLuint vaoID; GLuint buffID;
   GLint thetaLoc;
};

#endif
